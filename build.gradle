plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.5'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.ivanZlotnikov.phone_book'
version = '0.0.1-SNAPSHOT'
description = 'phonebook'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	// Spring Boot Starter Security
	implementation 'org.springframework.boot:spring-boot-starter-security'

	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	// Thymeleaf Extras for Spring Security
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
		// Utilities
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	implementation 'org.webjars:bootstrap:5.3.0'
	implementation 'org.webjars:font-awesome:6.4.0'
	implementation 'org.webjars:webjars-locator:0.46'
	// Validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	// Тестирование
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'

	// Для интеграционных тестов с Testcontainers
	testImplementation 'org.testcontainers:postgresql'
	testImplementation 'org.testcontainers:junit-jupiter'
	testRuntimeOnly 'com.h2database:h2'
}

tasks.named('test') {
	useJUnitPlatform()
}

//plugins {
//	id 'org.springframework.boot' version '3.2.0'
//	id 'io.spring.dependency-management' version '1.1.4'
//	id 'java'
//	id 'jacoco'
//}
//
//group = 'com.ivanzlotnikov.phone_book'
//version = '1.0.0'
//sourceCompatibility = '17'
//
//configurations {
//	compileOnly {
//		extendsFrom annotationProcessor
//	}
//}
//
//repositories {
//	mavenCentral()
//}
//
//dependencies {
//	// Spring Boot Starters
//	implementation 'org.springframework.boot:spring-boot-starter-web'
//	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
//	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
//	implementation 'org.springframework.boot:spring-boot-starter-validation'
//	implementation 'org.springframework.boot:spring-boot-starter-security'
//	implementation 'org.springframework.boot:spring-boot-starter-actuator'
//
//	// Database
//	runtimeOnly 'org.postgresql:postgresql'
//	testImplementation 'com.h2database:h2'
//
//	// Utilities
//	compileOnly 'org.projectlombok:lombok'
//	annotationProcessor 'org.projectlombok:lombok'
//	implementation 'org.webjars:bootstrap:5.3.0'
//	implementation 'org.webjars:font-awesome:6.4.0'
//	implementation 'org.webjars:webjars-locator:0.46'
//
//	// Testing
//	testImplementation 'org.springframework.boot:spring-boot-starter-test'
//	testImplementation 'org.springframework.security:spring-security-test'
//	testImplementation 'com.github.javafaker:javafaker:1.0.2'
//}
//
//tasks.named('test') {
//	useJUnitPlatform()
//	finalizedBy jacocoTestReport
//}
//
//jacocoTestReport {
//	dependsOn test
//	reports {
//		xml.required = true
//		html.required = true
//		csv.required = false
//	}
//}
//
//bootRun {
//	systemProperty 'spring.profiles.active', 'dev'
//}
//
//task buildDocker(type: Exec) {
//	dependsOn build
//	commandLine 'docker', 'build', '-t', 'phonebook:latest', '.'
//}
//
//task runDocker(type: Exec) {
//	dependsOn buildDocker
//	commandLine 'docker', 'run', '-p', '8080:8080', 'phonebook:latest'
//}
//
//// Конфигурация для разных профилей
//def profiles = 'dev'
//
//bootRun {
//	args = ["--spring.profiles.active=" + profiles]
//}
//
//task setDockerProfile {
//	doLast {
//		profiles = 'docker'
//	}
//}
//
//task dockerBootRun {
//	dependsOn setDockerProfile, bootRun
//}